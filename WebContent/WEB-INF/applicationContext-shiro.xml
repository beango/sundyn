<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/cache
			http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-autowire="byName" default-lazy-init="false">

    <bean id="coreCacheManager" class="net.sf.ehcache.CacheManager" factory-method="create" />

	<bean id="MyRealm" class="com.sundyn.Realm.MyRealm">
        <property name="cachingEnabled" value="true" />
        <property name="authenticationCachingEnabled" value="true" />
        <property name="authenticationCacheName" value="authenticationCache" />
        <property name="authorizationCachingEnabled" value="true" />
        <property name="authorizationCacheName" value="authorizationCache" />
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="MyRealm" />
		<property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager" />
	</bean>

	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.ServletContainerSessionManager"/>

    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
        <property name="cacheManager" ref="coreCacheManager" />
    </bean>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.jsp?shiro" />
		<property name="successUrl" value="/default.jsp?shiro" />
		<property name="unauthorizedUrl" value="/noauth.jsp?msg=%e6%97%a0%e8%ae%bf%e9%97%ae%e6%9d%83%e9%99%90" />
        <property name="filters">
            <map>
                <!--退出过滤器-->
                <entry key="logout" value-ref="logoutFilter" />
            </map>
        </property>
		<property name="filterChainDefinitions">
			<value>
                /style/**=anon
                /css/**=anon
                /js/**=anon
                /images/**=anon
                /img/**=anon
                /lib/**=anon
                /fckeditor/**=anon

                /managerLogout.action=logout
                /login.jsp=anon
				/noauth.jsp=anon
				/404.jsp=anon

                /warnQuery.action=authc,perms[WarnMsgQuery]
                /vipQuery.action=authc,perms[VipManager]
                /totalWindowDealRpt.action=authc,perms[totalWindowDeal]
                /totalProxyDealRpt.action=authc,perms[totalProxyDeal]
                /totalPersonDealRpt.action=authc,perms[totalPersonDeal]
                /totalDeptDealRpt.action=authc,perms[totalDeptDeal]
                /totalDatingDealRpt.action=authc,perms[totalDatingDeal]
                /totalBizDealRpt.action=authc,perms[totalBizDeal]
                /syslogrpt.action=authc,perms[SysLogRPT]
                /syslog.action=authc,perms[SysLog]
                /sysdevices.action=authc,perms[sysdevices]
                /sysDict.action=authc,perms[SysDict]
                /serialQuery.action=authc,perms[SerialManage]
                /securitylogrpt.action=authc,perms[AuditLogRPT]
                /queuealert.action=authc,perms[home]
                /queueEmployeeReport.action=authc,perms[queueEmployeeReport]
                /queryZhDealAjax.action=authc,perms[queryZhDealAjax]
                /queryResultDeal.action=authc,perms[queryResultDeal]
                /queryPeopleyDeal.action=authc,perms[queryPeopleyDeal]
                /queryDeptDeal.action=authc,perms[queryDeptDeal]
                /proxyQuery.action=authc,perms[ProxyManager]
                /proxyOrgQuery.action=authc,perms[SysOrgManage]
                /proxyBizDealRpt.action=authc,perms[proxyBizDealRpt]
                /noticeList.action=authc,perms[noticeList]
                /menuQuery.action=authc,perms[menuQuery]
                /managerlogin.action=authc,perms[managerlogin]
                /managerChangePsw.action=authc,perms[managerChangePsw]
                /lowerPowerQuery.action=authc,perms[lowerPowerQuery]
                /keyTypeQueryDialog.action=authc,perms[keyTypeQueryDialog]
                /jxEmployeeQuery.action=authc,perms[JXEMPLOYEE]
                /jxDataQuery.action=authc,perms[JXDATA]
                /hallQuery.action=authc,perms[HallManage]
                /employeeView.action=authc,perms[employeeView]
                /deptView.action=authc,perms[deptView]
                /deleteVideoFile.action=authc,perms[deleteVideoFile]
                /counterQuery.action=authc,perms[CounterManager]
                /blackQuery.action=authc,perms[BlackListManager]
                /baseSundynSet.action=authc,perms[baseSundynSet]
                /authQuery.action=authc,perms[AuthManage]
                /auditlogrpt.action=authc,perms[AuditLogRPT]
                /auditlogin.action=authc,perms[AuditLogin]
                /auditlock.action=authc,perms[AuditLock]
                /analyseTotal.action=authc,perms[analyseTotal]
                /analyseEmployee.action=authc,perms[analyseEmployee]
                /analyseDept.action=authc,perms[analyseDept]
                /analyseContentRate.action=authc,perms[analyseContentRate]
                /analyseContent.action=authc,perms[analyseContent]
                /adviceShowAnserTable.action=authc,perms[adviceShowAnserTable]
                /LowerManagerQuery.action=authc,perms[LowerManagerQuery]
                /auditlock.action=authc,perms[AuditLock]

                /** = anon
            </value>
		</property>
	</bean>

    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/login.jsp" />
    </bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!--<bean
        class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>

    <bean
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
            value="org.apache.shiro.SecurityUtils.setSecurityManager"></property>
        <property name="arguments" ref="securityManager"></property>
    </bean>
    <bean
        class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
        depends-on="lifecycleBeanPostProcessor" />
    <bean
        class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>

    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.apache.shiro.authz.UnauthenticatedException">
                    redirect:login.jsp?shiro-1
                </prop>
                <prop key="org.apache.shiro.authz.UnauthorizedException">
                    redirect:redirect.jsp?shiro-1
                </prop>
            </props>
        </property>
        <property name="defaultErrorView" value="error/genericView"/>
    </bean>-->
</beans>